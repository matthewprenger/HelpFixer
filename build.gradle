buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.0.8"
}

apply plugin: 'maven'
apply plugin: 'net.minecraftforge.gradle.forge'

version = '1.4'
minecraft.version = '1.11-13.19.0.2153'
minecraft.mappings = 'snapshot_20161118'

if(System.getenv('BUILD_NUMBER') != null) {
    version += ".${System.getenv('BUILD_NUMBER')}"
} else {
    version += ".9999"
}

version = "$minecraft.version-$version"

repositories {
    jcenter()
}

dependencies {
    testCompile 'junit:junit:4.12'
}

minecraft {
    runDir = 'run'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version
    inputs.property 'description', project.description
    inputs.property 'url', project.url

    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'
        include '**/*.properties'

        expand([
                'version'    : project.version,
                'mcversion'  : project.minecraft.version,
                'description': project.description,
                'url'        : project.url
        ])
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude '**/*.info'
        exclude '**/*.properties'
    }
}

def commonManifest = [
        'Created-By'            : "${System.getProperty('java.version')} + (${System.getProperty('java.vendor')})",
        'Implementation-Version': project.version,
        'Implementation-Title'  : project.name,
        'Minecraft-Version'     : project.minecraft.version,
        'Forge-Version'         : project.minecraft.forgeVersion
]

jar {
    manifest.mainAttributes(commonManifest)
}

tasks.withType(JavaCompile) { task ->
    task.options.encoding = 'UTF-8'
    task.options.fork = true
}

curseforge {
    apiKey = project.hasProperty('curseApiKey') ? project.curseApiKey : 'foo'
    project {
        id = '223797'
        releaseType = 'release'
        changelog = 'See the changes here: https://github.com/matthewprenger/HelpFixer/commits/master'

        mainArtifact(jar) {
            displayName = "HelpFixer - $project.version"
        }

        addArtifact(sourceJar) {
            displayName = "HelpFixer Sources - $project.version"
        }
    }
}

uploadArchives {
    repositories.mavenDeployer {
        dependsOn 'build'

        if (project.hasProperty('forgeMavenPass')) {
            repository(url: "http://files.minecraftforge.net/maven/manage/upload") {
                authentication(userName: "matthewprenger", password: project.getProperty('forgeMavenPass'))
            }
        } else {
            repository(url: 'file://localhost/' + project.file('repo').getAbsolutePath())
        }

        pom {
            groupId = project.group
            version = project.version
            artifactId = project.archivesBaseName
            project {
                name project.archivesBaseName
                packaging 'jar'
                description 'HelpFixer'
                url 'https://github.com/matthewprenger/HelpFixer'

                scm {
                    url 'https://github.com/matthewprenger/HelpFixer'
                    connection 'scm:git:git://github.com/matthewprenger/HelpFixer.git'
                    developerConnection 'scm:git:git@github.com:matthewprenger/HelpFixer.git'
                }

                issueManagement {
                    system 'github'
                    url 'https://github.com/matthewprenger/HelpFixer/issues'
                }

                licenses {
                    license {
                        name 'Do What You Want To Public License'
                        url 'https://raw.githubusercontent.com/matthewprenger/HelpFixer/master/LICENSE'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'matthewprenger'
                        name 'Matthew Prenger'
                        roles { role 'developer' }
                    }
                }
            }
        }
    }
}